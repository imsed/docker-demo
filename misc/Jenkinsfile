node {
   def commit_id
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"                        
     commit_id = readFile('.git/commit-id').trim()
   }
   stage('test') {
     nodejs(nodeJSInstallationName: 'nodejs') {
       sh 'npm install --only=dev'
       sh 'npm test'
     }
   }
   stage('docker build') {
     docker.withRegistry('https://index.docker.io/v2/', 'Dockerhub') {
       def app = docker.build("imsed123/docker-nodejs-demo:${commit_id}", '.')
     }
   }
   stage('Scan') {
	steps {
		// Scan the image
		prismaCloudScanImage ca: '',
		cert: '',
		dockerAddress: 'unix:///var/run/docker.sock',
		image: 'imsed123/docker-nodejs-demo*',
		key: '',
		logLevel: 'info',
		podmanPath: '',
		project: '',
		resultsFile: 'prisma-cloud-scan-results.json',
		ignoreImageBuildTime:true
	}
}
    
    post {
        always {
            // The post section lets you run the publish step regardless of the scan results
            prismaCloudPublish resultsFilePattern: 'prisma-cloud-scan-results.json'
        }
    }



}
